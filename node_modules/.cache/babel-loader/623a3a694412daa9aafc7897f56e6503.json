{"ast":null,"code":"var _jsxFileName = \"/home/addweb/jsPractice/taskby-kelvin/react-crud-routing/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Posts() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [editId, setEditId] = useState('');\n  const [items, setItems] = useState([]);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [err, setErr] = useState([{}]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    fetch(\"http://localhost:3001/posts\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const isValid = formValidation();\n\n    if (isEdit) {\n      Axios.put(`http://localhost:3001/posts/${editId}`, {\n        title: title,\n        body: body\n      }).then(res => {\n        setIsEdit(false);\n        setEditId('');\n        setTitle('');\n        setBody('');\n        getData();\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      Axios.post(\"http://localhost:3001/posts\", {\n        title: title,\n        body: body\n      }).then(res => {\n        getData();\n        setTitle('');\n        setBody('');\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const formValidation = () => {\n    const err = {};\n    let isValid = true;\n  }; //delete\n\n\n  const deleteHandler = item => {\n    console.log(item, \"item\");\n    Axios.delete(`http://localhost:3001/posts/${item}`).then(res => {\n      getData();\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //edit//update\n\n\n  const editHandler = item => {\n    setTitle(item.title);\n    setBody(item.body);\n    setEditId(item.id);\n    setIsEdit(true);\n  }; //error and loading state\n\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"title\",\n            children: \"Enter Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            onChange: e => setTitle(e.target.value),\n            value: title,\n            id: \"title\",\n            name: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 136\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"body\",\n            children: \"Enter Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 69\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            onChange: e => setBody(e.target.value),\n            value: body,\n            id: \"body\",\n            name: \"body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 132\n          }, this), isEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"ID :- \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"TITLE :- \", item.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"DESCRIPTION :- \", item.body]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  deleteHandler(item.id);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"material-icons\",\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 89\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  editHandler(item);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"material-icons\",\n                  children: \"EDIT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 83\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Posts, \"KfSKQj493w1ICItqnQaSocUMWsw=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/addweb/jsPractice/taskby-kelvin/react-crud-routing/src/components/Posts.js"],"names":["React","Header","useState","useEffect","Axios","useForm","Posts","error","setError","isLoaded","setIsLoaded","isEdit","setIsEdit","editId","setEditId","items","setItems","title","setTitle","body","setBody","err","setErr","getData","fetch","then","res","json","result","submitHandler","e","preventDefault","isValid","formValidation","put","catch","console","log","post","deleteHandler","item","delete","editHandler","id","message","textAlign","target","value","map","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from './Header'\nimport { useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport { useForm } from 'react-hook-form'\n\nfunction Posts() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [isEdit, setIsEdit] = useState(false);\n    const [editId, setEditId] = useState('')\n    const [items, setItems] = useState([]);\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [err, setErr] = useState([{}])\n\n    useEffect(() => {\n        getData();\n\n    }, [])\n    const getData = () => {\n        fetch(\"http://localhost:3001/posts\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setItems(result);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const isValid = formValidation();\n        if (isEdit) {\n            Axios.put(`http://localhost:3001/posts/${editId}`, {\n                title: title,\n                body: body\n            })\n                .then((res) => {\n                    setIsEdit(false)\n                    setEditId('')\n                    setTitle('');\n                    setBody('');\n                    getData();\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        } else {\n            Axios.post(\"http://localhost:3001/posts\", {\n                title: title,\n                body: body\n            })\n                .then((res) => {\n                    getData();\n                    setTitle('');\n                    setBody('');\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        }\n\n    }\n\n    const formValidation = () => {\n        const err = {}\n        let isValid = true\n\n    }\n\n    //delete\n    const deleteHandler = (item) => {\n        console.log(item, \"item\")\n        Axios.delete(`http://localhost:3001/posts/${item}`)\n            .then((res) => {\n                getData();\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    };\n    //edit//update\n    const editHandler = (item) => {\n        setTitle(item.title);\n        setBody(item.body);\n        setEditId(item.id)\n        setIsEdit(true)\n    }\n\n    //error and loading state\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <>\n                <Header />\n                <div style={{ textAlign: 'center' }}>\n                    <form onSubmit={submitHandler}>\n                        <label for=\"title\">Enter Title:</label><br />\n                        <input type=\"text\" required onChange={(e) => setTitle(e.target.value)} value={title} id=\"title\" name=\"title\" /><br />\n                        <label for=\"body\">Enter Description:</label><br />\n                        <input type=\"text\" required onChange={(e) => setBody(e.target.value)} value={body} id=\"body\" name=\"body\" /><br />\n                        {\n                            isEdit ?\n                                <button type=\"submit\" >Update</button>\n                                :\n                                <button type=\"submit\" >Submit</button>\n                        }\n                    </form>\n                </div>\n                <ul>\n                    {items.map((item, index) => {\n                        return (\n                            <li key={item.id}>\n                                <ul>\n                                    <li>ID :- {index + 1}</li>\n                                    <li>TITLE :- {item.title}</li>\n                                    <li>DESCRIPTION :- {item.body}</li>\n                                    <button onClick={() => { deleteHandler(item.id) }} ><i class=\"material-icons\">delete</i></button>\n                                    <button onClick={() => { editHandler(item) }}><i class=\"material-icons\">EDIT</i></button>\n                                </ul>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </>\n        );\n    }\n}\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}