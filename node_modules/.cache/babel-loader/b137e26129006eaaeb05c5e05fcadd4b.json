{"ast":null,"code":"var _jsxFileName = \"/home/addweb/jsPractice/taskby-kelvin/react-crud-routing/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  age: yup.number().required().positive().integer(),\n  email: yup.string().email(),\n  website: yup.string().url(),\n  createdOn: yup.date().default(function () {\n    return new Date();\n  })\n});\n\nfunction Posts() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [editId, setEditId] = useState('');\n  const [items, setItems] = useState([]);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    fetch(\"http://localhost:3001/posts\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (isEdit) {\n      Axios.put(`http://localhost:3001/posts/${editId}`, {\n        title: title,\n        body: body\n      }).then(res => {\n        setIsEdit(false);\n        setEditId('');\n        setTitle('');\n        setBody('');\n        getData();\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      Axios.post(\"http://localhost:3001/posts\", {\n        title: title,\n        body: body\n      }).then(res => {\n        getData();\n        setTitle('');\n        setBody('');\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }; //delete\n\n\n  const deleteHandler = item => {\n    console.log(item, \"item\");\n    Axios.delete(`http://localhost:3001/posts/${item}`).then(res => {\n      getData();\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //edit//update\n\n\n  const editHandler = item => {\n    setTitle(item.title);\n    setBody(item.body);\n    setEditId(item.id);\n    setIsEdit(true);\n  }; //error and loading state\n\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"title\",\n            children: \"Enter Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            onChange: e => setTitle(e.target.value),\n            value: title,\n            id: \"title\",\n            name: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 136\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"body\",\n            children: \"Enter Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 69\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            onChange: e => setBody(e.target.value),\n            value: body,\n            id: \"body\",\n            name: \"body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 132\n          }, this), isEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"ID :- \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"TITLE :- \", item.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"DESCRIPTION :- \", item.body]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  deleteHandler(item.id);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"material-icons\",\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 89\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  editHandler(item);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"material-icons\",\n                  children: \"EDIT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 83\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Posts, \"TOke30NlVq5oAKCdSGuIYq/QwI4=\", false, function () {\n  return [useForm];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/addweb/jsPractice/taskby-kelvin/react-crud-routing/src/components/Posts.js"],"names":["React","Header","useState","useEffect","Axios","useForm","yup","schema","object","shape","name","string","required","age","number","positive","integer","email","website","url","createdOn","date","default","Date","Posts","register","handleSubmit","errors","error","setError","isLoaded","setIsLoaded","isEdit","setIsEdit","editId","setEditId","items","setItems","title","setTitle","body","setBody","getData","fetch","then","res","json","result","submitHandler","e","preventDefault","put","catch","err","console","log","post","deleteHandler","item","delete","editHandler","id","message","textAlign","target","value","map","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from './Header'\nimport { useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport { useForm } from 'react-hook-form'\nimport * as yup from 'yup';\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  age: yup.number().required().positive().integer(),\n  email: yup.string().email(),\n  website: yup.string().url(),\n  createdOn: yup.date().default(function () {\n    return new Date();\n  }),\n});\n\nfunction Posts() {\n    const { register, handleSubmit, errors } = useForm();\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [isEdit, setIsEdit] = useState(false);\n    const [editId, setEditId] = useState('')\n    const [items, setItems] = useState([]);\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n\n    useEffect(() => {\n        getData();\n\n    }, [])\n    const getData = () => {\n        fetch(\"http://localhost:3001/posts\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setItems(result);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (isEdit) {\n            Axios.put(`http://localhost:3001/posts/${editId}`, {\n                title: title,\n                body: body\n            })\n                .then((res) => {\n                    setIsEdit(false)\n                    setEditId('')\n                    setTitle('');\n                    setBody('');\n                    getData();\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        } else {\n            Axios.post(\"http://localhost:3001/posts\", {\n                title: title,\n                body: body\n            })\n                .then((res) => {\n                    getData();\n                    setTitle('');\n                    setBody('');\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        }\n\n    }\n    //delete\n    const deleteHandler = (item) => {\n        console.log(item, \"item\")\n        Axios.delete(`http://localhost:3001/posts/${item}`)\n            .then((res) => {\n                getData();\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    };\n    //edit//update\n    const editHandler = (item) => {\n        setTitle(item.title);\n        setBody(item.body);\n        setEditId(item.id)\n        setIsEdit(true)\n    }\n\n    //error and loading state\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <>\n                <Header />\n                <div style={{ textAlign: 'center' }}>\n                    <form onSubmit={submitHandler}>\n                        <label for=\"title\">Enter Title:</label><br />\n                        <input type=\"text\" required onChange={(e) => setTitle(e.target.value)} value={title} id=\"title\" name=\"title\" /><br />\n                        <label for=\"body\">Enter Description:</label><br />\n                        <input type=\"text\" required onChange={(e) => setBody(e.target.value)} value={body} id=\"body\" name=\"body\" /><br />\n                        {\n                            isEdit ?\n                                <button type=\"submit\" >Update</button>\n                                :\n                                <button type=\"submit\" >Submit</button>\n                        }\n                    </form>\n                </div>\n                <ul>\n                    {items.map((item, index) => {\n                        return (\n                            <li key={item.id}>\n                                <ul>\n                                    <li>ID :- {index + 1}</li>\n                                    <li>TITLE :- {item.title}</li>\n                                    <li>DESCRIPTION :- {item.body}</li>\n                                    <button onClick={() => { deleteHandler(item.id) }} ><i class=\"material-icons\">delete</i></button>\n                                    <button onClick={() => { editHandler(item) }}><i class=\"material-icons\">EDIT</i></button>\n                                </ul>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </>\n        );\n    }\n}\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}